// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using warehousing_backend.DbContextes;

#nullable disable

namespace warehousing_backend.Migrations
{
    [DbContext(typeof(WarehousingDB))]
    [Migration("20250705113146_W04041401")]
    partial class W04041401
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("warehousing_backend.Entities.Base.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Brands")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hair")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Instruments")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Skin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Supplements")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perfume")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Mobile")
                        .HasColumnType("REAL");

                    b.Property<int>("Phone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Input", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Discoubt")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("InvoiceNumber")
                        .HasColumnType("REAL");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Offer")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductroductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SalesPersonName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SalesPersonPhon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Warehouseman")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductroductId");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Output", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ClientPhone")
                        .HasColumnType("REAL");

                    b.Property<double>("InvoiceNumber")
                        .HasColumnType("REAL");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductroductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Warehouseman")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductroductId");

                    b.ToTable("Outputs");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Brand")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriesId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Inventory")
                        .HasColumnType("REAL");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReturnTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Mobile")
                        .HasColumnType("REAL");

                    b.Property<int>("Phone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Input", b =>
                {
                    b.HasOne("warehousing_backend.Entities.Base.Product", "Productroduct")
                        .WithMany()
                        .HasForeignKey("ProductroductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productroduct");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Output", b =>
                {
                    b.HasOne("warehousing_backend.Entities.Base.Product", "Productroduct")
                        .WithMany()
                        .HasForeignKey("ProductroductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productroduct");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Product", b =>
                {
                    b.HasOne("warehousing_backend.Entities.Base.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("warehousing_backend.Entities.Base.Return", b =>
                {
                    b.HasOne("warehousing_backend.Entities.Base.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
